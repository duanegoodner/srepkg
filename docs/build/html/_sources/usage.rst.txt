Usage
_____

Command Line Syntax
===================
.. code-block:: console

    usage: srepkg [-h] [--srepkg_name [SREPKG_NAME]] [--construction_dir
                [SREPKG_BUILD_DIR]] [--dist_out_dir [DIST_OUT_DIR]] pkg_ref

    positional arguments:
      pkg_ref               Original package to be repackaged. Can be a local
                            path, PyPI package name, or Github repo.

    optional arguments:
      -h, --help            show this help message and exit
      --srepkg_name [SREPKG_NAME]
                            Name to be used for repackaged package. Default is
                            <ORIGINAL_PACKAGE_NAME + srepkg>
      --construction_dir [SREPKG_BUILD_DIR]
                            Directory where non-compressed repackage will be
                            built and saved. If not specified, srepkg
                            is built in a temp directory and deleted after
                            distribution archive creation.
      --dist_out_dir [DIST_OUT_DIR]
                            Directory where srepkg distribution archive is
                            saved. Default is the current working directory.


Output
======
If the user-provided command just takes the form ``$ srepkg orig_pkg_ref``  (i. e. no optional arguments are used), a source distribution of the re-packaged package is saved as a .zip file named ``<ORIGINAL_NAMEsrepkg-ORIGINAL_VERSION.zip>`` in the directory from which srepkg is called, and no other files from the srepkg construction process are saved. ORIGINAL_NAME and ORIGINAL_VERSION are the respective name and version of the original package as specified in its setup.py or setup.cfg file. This source distribution archive can be installed as a package named ORIGINAL_NAMEsrepkg using ``$ pip install ORIGINAL_NAMEsrepkg-ORIGINAL_VERSION.zip``.

These name and output directory of the .zip file iscan be customized using the optional -n, and -d arguments. The optional -c argument can be used to save an un-compressed version of the re-packaged package in a user-specified directory.

Installing an S-package
=======================
A distribution archive produced by srepkg can be installed using pip. If we are in the directory where we have used srepkg to create ``ORIGINAL_NAMEsrepkg-ORIGINAL_VERSION.zip``, we can install it with the command:

.. code-block:: console

    $ pip install ORIGINAL_NAMEsrepkg-ORIGINAL_VERSION.zip

Using an S-package
==================

Once an S-package has been installed in a user's global Python environment, or (preferably) a virtual environment, all command line entry points of the original CLI application are available in that environment. The syntax of these commands is identical to that of the original application.